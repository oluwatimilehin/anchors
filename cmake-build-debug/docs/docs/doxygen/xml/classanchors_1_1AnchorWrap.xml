<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classanchors_1_1AnchorWrap" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>anchors::AnchorWrap</compoundname>
    <basecompoundref prot="public" virt="non-virtual">anchors::AnchorBase</basecompoundref>
    <derivedcompoundref refid="classanchors_1_1Anchor" prot="public" virt="non-virtual">anchors::Anchor&lt; T, InputType1, InputType2 &gt;</derivedcompoundref>
    <includes refid="anchor_8h" local="no">anchor.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classanchors_1_1AnchorWrap_1a3e1914489e4bed4f9f23cdeab34a43dc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Engine</definition>
        <argsstring></argsstring>
        <name>Engine</name>
        <qualifiedname>anchors::AnchorWrap::Engine</qualifiedname>
        <param>
          <type><ref refid="classanchors_1_1Engine" kindref="compound">Engine</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/user/Google Drive/CodeProjects/anchors/src/anchor.h" line="49" column="18" bodyfile="/mnt/c/Users/user/Google Drive/CodeProjects/anchors/src/anchor.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classanchors_1_1AnchorWrap_1aa0c9cbee7b06ead53f2e15f33bd554a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual anchors::AnchorWrap&lt; T &gt;::~AnchorWrap</definition>
        <argsstring>()</argsstring>
        <name>~AnchorWrap</name>
        <qualifiedname>anchors::AnchorWrap::~AnchorWrap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/user/Google Drive/CodeProjects/anchors/src/anchor.h" line="43" column="13" bodyfile="/mnt/c/Users/user/Google Drive/CodeProjects/anchors/src/anchor.h" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classanchors_1_1AnchorWrap_1a3446a3765a6e89ea0e1c05e001e385b6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>T</type>
        <definition>virtual T anchors::AnchorWrap&lt; T &gt;::get</definition>
        <argsstring>() const =0</argsstring>
        <name>get</name>
        <qualifiedname>anchors::AnchorWrap::get</qualifiedname>
        <reimplementedby refid="classanchors_1_1Anchor_1a43b6640a8376f0b3dc5017fd5ea4f775">get</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/user/Google Drive/CodeProjects/anchors/src/anchor.h" line="44" column="15"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classanchors_1_1AnchorWrap_1ad332382aaa59b7590f233ad5ca4eab13" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void anchors::AnchorWrap&lt; T &gt;::set</definition>
        <argsstring>(const T &amp;value)=0</argsstring>
        <name>set</name>
        <qualifiedname>anchors::AnchorWrap::set</qualifiedname>
        <reimplementedby refid="classanchors_1_1Anchor_1acbba205df52ebf60f65b88d677631af5">set</reimplementedby>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/user/Google Drive/CodeProjects/anchors/src/anchor.h" line="47" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class exists to simplify the <computeroutput><ref refid="classanchors_1_1Anchors" kindref="compound">Anchors</ref></computeroutput> API, so that we can pass an <ref refid="classanchors_1_1Anchor" kindref="compound">Anchor</ref> around using only the type of its value, and excluding the type of its input <computeroutput><ref refid="classanchors_1_1Anchors" kindref="compound">Anchors</ref></computeroutput>. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>- type of an <ref refid="classanchors_1_1Anchor" kindref="compound">Anchor</ref>&apos;s value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>anchors::Anchor&lt; T, InputType1, InputType2 &gt;</label>
        <link refid="classanchors_1_1Anchor"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>anchors::AnchorWrap&lt; T &gt;</label>
        <link refid="classanchors_1_1AnchorWrap"/>
      </node>
    </inheritancegraph>
    <location file="/mnt/c/Users/user/Google Drive/CodeProjects/anchors/src/anchor.h" line="41" column="1" bodyfile="/mnt/c/Users/user/Google Drive/CodeProjects/anchors/src/anchor.h" bodystart="41" bodyend="50"/>
    <listofallmembers>
      <member refid="classanchors_1_1AnchorBase_1a06a9cc1aa28faecb5930eb42d4b6c6c5" prot="public" virt="pure-virtual"><scope>anchors::AnchorWrap</scope><name>addDependant</name></member>
      <member refid="classanchors_1_1AnchorBase_1aa239c8326615a26224f8c04538bdd587" prot="public" virt="non-virtual"><scope>anchors::AnchorWrap</scope><name>AnchorId</name></member>
      <member refid="classanchors_1_1AnchorBase_1a70ec02ac2d2dd578b07ed62dd31faa23" prot="public" virt="pure-virtual"><scope>anchors::AnchorWrap</scope><name>compute</name></member>
      <member refid="classanchors_1_1AnchorBase_1af50a0642df7b421172fd0dfe41be42e0" prot="public" virt="pure-virtual"><scope>anchors::AnchorWrap</scope><name>decrementNecessaryCount</name></member>
      <member refid="classanchors_1_1AnchorWrap_1a3446a3765a6e89ea0e1c05e001e385b6" prot="public" virt="pure-virtual"><scope>anchors::AnchorWrap</scope><name>get</name></member>
      <member refid="classanchors_1_1AnchorBase_1a7b27f91362bed0ea15d32cd4b365717b" prot="public" virt="pure-virtual"><scope>anchors::AnchorWrap</scope><name>getChangeId</name></member>
      <member refid="classanchors_1_1AnchorBase_1ae3298ca67a8045618ee73e15daf8786f" prot="public" virt="pure-virtual"><scope>anchors::AnchorWrap</scope><name>getDependants</name></member>
      <member refid="classanchors_1_1AnchorBase_1af535e4775ae81d8a6563580401fa3dbb" prot="public" virt="pure-virtual"><scope>anchors::AnchorWrap</scope><name>getDependencies</name></member>
      <member refid="classanchors_1_1AnchorBase_1a3e0ac4f4287fecd4ee2811024cdb652f" prot="public" virt="pure-virtual"><scope>anchors::AnchorWrap</scope><name>getHeight</name></member>
      <member refid="classanchors_1_1AnchorBase_1a50c97053ec6d1e0b823df5dcdba580e7" prot="public" virt="pure-virtual"><scope>anchors::AnchorWrap</scope><name>getId</name></member>
      <member refid="classanchors_1_1AnchorBase_1ace165163b0cebdaa5e660966e8a8b4ef" prot="public" virt="pure-virtual"><scope>anchors::AnchorWrap</scope><name>getRecomputeId</name></member>
      <member refid="classanchors_1_1AnchorBase_1ab9fdba94048c111fa58fa5a3a1c5bfa6" prot="public" virt="pure-virtual"><scope>anchors::AnchorWrap</scope><name>isNecessary</name></member>
      <member refid="classanchors_1_1AnchorBase_1a49c6c172914a2edccdc5f015e104df76" prot="public" virt="pure-virtual"><scope>anchors::AnchorWrap</scope><name>isStale</name></member>
      <member refid="classanchors_1_1AnchorBase_1a2ffb23709f6e0770d6e60afb36a33164" prot="public" virt="pure-virtual"><scope>anchors::AnchorWrap</scope><name>markNecessary</name></member>
      <member refid="classanchors_1_1AnchorBase_1ae546d1fc3b18f4af5bae532f21134472" prot="public" virt="pure-virtual"><scope>anchors::AnchorWrap</scope><name>removeDependant</name></member>
      <member refid="classanchors_1_1AnchorWrap_1ad332382aaa59b7590f233ad5ca4eab13" prot="protected" virt="pure-virtual"><scope>anchors::AnchorWrap</scope><name>set</name></member>
      <member refid="classanchors_1_1AnchorBase_1a037619bf7178d572af2785221b691feb" prot="public" virt="pure-virtual"><scope>anchors::AnchorWrap</scope><name>setChangeId</name></member>
      <member refid="classanchors_1_1AnchorBase_1a1e23567c6b6bb702556e25bcb5f50867" prot="public" virt="virtual"><scope>anchors::AnchorWrap</scope><name>~AnchorBase</name></member>
      <member refid="classanchors_1_1AnchorWrap_1aa0c9cbee7b06ead53f2e15f33bd554a4" prot="public" virt="virtual"><scope>anchors::AnchorWrap</scope><name>~AnchorWrap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
