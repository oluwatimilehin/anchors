<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="classanchors_1_1Engine" kind="class" language="C++" prot="public">
    <compoundname>anchors::Engine</compoundname>
    <includes refid="engine_8h" local="no">engine.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classanchors_1_1Engine_1afb3779b91c6bf36bf6e2718f9d48ee2b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int anchors::Engine::d_stabilizationNumber</definition>
        <argsstring></argsstring>
        <name>d_stabilizationNumber</name>
        <qualifiedname>anchors::Engine::d_stabilizationNumber</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/user/Google Drive/CodeProjects/anchors/src/engine.h" line="99" column="9" bodyfile="/mnt/c/Users/user/Google Drive/CodeProjects/anchors/src/engine.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classanchors_1_1Engine_1aea1a8d4435b569a94de96745c60d49dd" prot="private" static="no" mutable="no">
        <type>std::unordered_set&lt; std::shared_ptr&lt; AnchorBase &gt; &gt;</type>
        <definition>std::unordered_set&lt;std::shared_ptr&lt;AnchorBase&gt; &gt; anchors::Engine::d_observedNodes</definition>
        <argsstring></argsstring>
        <name>d_observedNodes</name>
        <qualifiedname>anchors::Engine::d_observedNodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/user/Google Drive/CodeProjects/anchors/src/engine.h" line="103" column="24" bodyfile="/mnt/c/Users/user/Google Drive/CodeProjects/anchors/src/engine.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classanchors_1_1Engine_1ad9849da6117a0cb3dd0b39678e105e10" prot="private" static="no" mutable="no">
        <type>std::priority_queue&lt; std::shared_ptr&lt; AnchorBase &gt; &gt;</type>
        <definition>std::priority_queue&lt;std::shared_ptr&lt;AnchorBase&gt; &gt; anchors::Engine::d_recomputeHeap</definition>
        <argsstring></argsstring>
        <name>d_recomputeHeap</name>
        <qualifiedname>anchors::Engine::d_recomputeHeap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/user/Google Drive/CodeProjects/anchors/src/engine.h" line="106" column="25" bodyfile="/mnt/c/Users/user/Google Drive/CodeProjects/anchors/src/engine.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classanchors_1_1Engine_1afa19e3023ab30a4569204a1f1b23bece" prot="private" static="no" mutable="no">
        <type>std::unordered_set&lt; std::shared_ptr&lt; AnchorBase &gt; &gt;</type>
        <definition>std::unordered_set&lt;std::shared_ptr&lt;AnchorBase&gt; &gt; anchors::Engine::d_recomputeSet</definition>
        <argsstring></argsstring>
        <name>d_recomputeSet</name>
        <qualifiedname>anchors::Engine::d_recomputeSet</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/user/Google Drive/CodeProjects/anchors/src/engine.h" line="110" column="24" bodyfile="/mnt/c/Users/user/Google Drive/CodeProjects/anchors/src/engine.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classanchors_1_1Engine_1a19d012d2d76c88cb1368be8748df9ed3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>anchors::Engine::Engine</definition>
        <argsstring>()</argsstring>
        <name>Engine</name>
        <qualifiedname>anchors::Engine::Engine</qualifiedname>
        <briefdescription>
<para>Creates an instance of the <ref refid="classanchors_1_1Engine" kindref="compound">Engine</ref> class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/user/Google Drive/CodeProjects/anchors/src/engine.h" line="24" column="5" bodyfile="/mnt/c/Users/user/Google Drive/CodeProjects/anchors/src/engine.cpp" bodystart="5" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="classanchors_1_1Engine_1a9bbb22829c003b574174d9f8a8c0191a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T anchors::Engine::get</definition>
        <argsstring>(const AnchorPtr&lt; T &gt; &amp;anchor)</argsstring>
        <name>get</name>
        <qualifiedname>anchors::Engine::get</qualifiedname>
        <param>
          <type>const AnchorPtr&lt; T &gt; &amp;</type>
          <declname>anchor</declname>
        </param>
        <briefdescription>
<para>Returns the value of the given <ref refid="classanchors_1_1Anchor" kindref="compound">Anchor</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is only guaranteed to return the latest value of an <ref refid="classanchors_1_1Anchor" kindref="compound">Anchor</ref> marked observed using <computeroutput><ref refid="classanchors_1_1Engine_1a8b358a80ca9c9e9a44b3e219250ff783" kindref="member">observe()</ref></computeroutput>.</para>
<para>For an unobserved <ref refid="classanchors_1_1Anchor" kindref="compound">Anchor</ref>, it may return a stale value—if the <ref refid="classanchors_1_1Anchor" kindref="compound">Anchor</ref> was created with a value or has been computed before—or an undefined value if the <ref refid="classanchors_1_1Anchor" kindref="compound">Anchor</ref> was created with a function e.g. using <computeroutput><ref refid="classanchors_1_1Anchors_1a4e0d9710f681bd94d4bf493831c358d2" kindref="member">Anchors::map</ref></computeroutput>, and has not been computed before.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>- type of the <ref refid="classanchors_1_1Anchor" kindref="compound">Anchor</ref> value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anchor</parametername>
</parameternamelist>
<parameterdescription>
<para>- input <ref refid="classanchors_1_1Anchor" kindref="compound">Anchor</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the current value of the input <ref refid="classanchors_1_1Anchor" kindref="compound">Anchor</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/user/Google Drive/CodeProjects/anchors/src/engine.h" line="41" column="7" bodyfile="/mnt/c/Users/user/Google Drive/CodeProjects/anchors/src/engine.h" bodystart="119" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classanchors_1_1Engine_1a66fa173d6eb7615402aa0abbfd869a1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void anchors::Engine::set</definition>
        <argsstring>(AnchorPtr&lt; T &gt; &amp;anchor, T val)</argsstring>
        <name>set</name>
        <qualifiedname>anchors::Engine::set</qualifiedname>
        <param>
          <type>AnchorPtr&lt; T &gt; &amp;</type>
          <declname>anchor</declname>
        </param>
        <param>
          <type>T</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Sets the value of the given <ref refid="classanchors_1_1Anchor" kindref="compound">Anchor</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>If the provided value is different from the current value of the <ref refid="classanchors_1_1Anchor" kindref="compound">Anchor</ref>, any observed <ref refid="classanchors_1_1Anchors" kindref="compound">Anchors</ref> that depends on the given <ref refid="classanchors_1_1Anchor" kindref="compound">Anchor</ref> will return an up-to-date value when its value is retrieved using <computeroutput><ref refid="classanchors_1_1Engine_1a9bbb22829c003b574174d9f8a8c0191a" kindref="member">get()</ref></computeroutput>.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>- type of the <ref refid="classanchors_1_1Anchor" kindref="compound">Anchor</ref> value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anchor</parametername>
</parameternamelist>
<parameterdescription>
<para>- input <ref refid="classanchors_1_1Anchor" kindref="compound">Anchor</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>- new value of the <ref refid="classanchors_1_1Anchor" kindref="compound">Anchor</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/user/Google Drive/CodeProjects/anchors/src/engine.h" line="54" column="10" bodyfile="/mnt/c/Users/user/Google Drive/CodeProjects/anchors/src/engine.h" bodystart="128" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classanchors_1_1Engine_1a8b358a80ca9c9e9a44b3e219250ff783" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void anchors::Engine::observe</definition>
        <argsstring>(AnchorPtr&lt; T &gt; &amp;anchor)</argsstring>
        <name>observe</name>
        <qualifiedname>anchors::Engine::observe</qualifiedname>
        <param>
          <type>AnchorPtr&lt; T &gt; &amp;</type>
          <declname>anchor</declname>
        </param>
        <briefdescription>
<para>Marks an <ref refid="classanchors_1_1Anchor" kindref="compound">Anchor</ref> as observed. </para>
        </briefdescription>
        <detaileddescription>
<para>An observed <ref refid="classanchors_1_1Anchor" kindref="compound">Anchor</ref> is guaranteed to be up to date when you retrieve its value.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>- type of the <ref refid="classanchors_1_1Anchor" kindref="compound">Anchor</ref> value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anchor</parametername>
</parameternamelist>
<parameterdescription>
<para>- input <ref refid="classanchors_1_1Anchor" kindref="compound">Anchor</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/user/Google Drive/CodeProjects/anchors/src/engine.h" line="64" column="10" bodyfile="/mnt/c/Users/user/Google Drive/CodeProjects/anchors/src/engine.h" bodystart="148" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classanchors_1_1Engine_1a7265da1f67909b755ab765f27b1b923c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void anchors::Engine::observe</definition>
        <argsstring>(std::vector&lt; AnchorPtr&lt; T &gt; &gt; &amp;anchors)</argsstring>
        <name>observe</name>
        <qualifiedname>anchors::Engine::observe</qualifiedname>
        <param>
          <type>std::vector&lt; AnchorPtr&lt; T &gt; &gt; &amp;</type>
          <declname>anchors</declname>
        </param>
        <briefdescription>
<para>Marks a vector of <ref refid="classanchors_1_1Anchors" kindref="compound">Anchors</ref> with the same type as observed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>- type of the <ref refid="classanchors_1_1Anchors" kindref="compound">Anchors</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anchors</parametername>
</parameternamelist>
<parameterdescription>
<para>- input <ref refid="classanchors_1_1Anchors" kindref="compound">Anchors</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/user/Google Drive/CodeProjects/anchors/src/engine.h" line="73" column="10" bodyfile="/mnt/c/Users/user/Google Drive/CodeProjects/anchors/src/engine.h" bodystart="161" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classanchors_1_1Engine_1ab027e6babde932c9b11461a12456207f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void anchors::Engine::unobserve</definition>
        <argsstring>(AnchorPtr&lt; T &gt; &amp;anchor)</argsstring>
        <name>unobserve</name>
        <qualifiedname>anchors::Engine::unobserve</qualifiedname>
        <param>
          <type>AnchorPtr&lt; T &gt; &amp;</type>
          <declname>anchor</declname>
        </param>
        <briefdescription>
<para>Marks an <ref refid="classanchors_1_1Anchor" kindref="compound">Anchor</ref> as unobserved. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>- type of the <ref refid="classanchors_1_1Anchor" kindref="compound">Anchor</ref> value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>anchor</parametername>
</parameternamelist>
<parameterdescription>
<para>- input <ref refid="classanchors_1_1Anchor" kindref="compound">Anchor</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/user/Google Drive/CodeProjects/anchors/src/engine.h" line="81" column="10" bodyfile="/mnt/c/Users/user/Google Drive/CodeProjects/anchors/src/engine.h" bodystart="168" bodyend="177"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classanchors_1_1Engine_1a9250e6e9b037b9c60ba6a5dab9fc8a46" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void anchors::Engine::stabilize</definition>
        <argsstring>()</argsstring>
        <name>stabilize</name>
        <qualifiedname>anchors::Engine::stabilize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/user/Google Drive/CodeProjects/anchors/src/engine.h" line="85" column="10" bodyfile="/mnt/c/Users/user/Google Drive/CodeProjects/anchors/src/engine.cpp" bodystart="41" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classanchors_1_1Engine_1a2d19da55d05d01e30ec6733cb1f5d90b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void anchors::Engine::observeNode</definition>
        <argsstring>(std::shared_ptr&lt; AnchorBase &gt; &amp;current, std::unordered_set&lt; std::shared_ptr&lt; AnchorBase &gt; &gt; &amp;)</argsstring>
        <name>observeNode</name>
        <qualifiedname>anchors::Engine::observeNode</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; AnchorBase &gt; &amp;</type>
          <declname>current</declname>
        </param>
        <param>
          <type>std::unordered_set&lt; std::shared_ptr&lt; AnchorBase &gt; &gt; &amp;</type>
          <defname>visited</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/user/Google Drive/CodeProjects/anchors/src/engine.h" line="88" column="10" bodyfile="/mnt/c/Users/user/Google Drive/CodeProjects/anchors/src/engine.cpp" bodystart="11" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classanchors_1_1Engine_1a421a2e8e0f41c8e6b76b6d14c37dda43" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void anchors::Engine::unobserveNode</definition>
        <argsstring>(std::shared_ptr&lt; AnchorBase &gt; &amp;current)</argsstring>
        <name>unobserveNode</name>
        <qualifiedname>anchors::Engine::unobserveNode</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; AnchorBase &gt; &amp;</type>
          <declname>current</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/c/Users/user/Google Drive/CodeProjects/anchors/src/engine.h" line="93" column="10" bodyfile="/mnt/c/Users/user/Google Drive/CodeProjects/anchors/src/engine.cpp" bodystart="32" bodyend="39"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classanchors_1_1Engine" kindref="compound">Engine</ref> is the brain of Anchors, containing the necessary functions and data to retrieve the value of an <computeroutput><ref refid="classanchors_1_1Anchor" kindref="compound">Anchor</ref></computeroutput> object. </para>
    </briefdescription>
    <detaileddescription>
<para>Note that this class is not thread-safe. </para>
    </detaileddescription>
    <location file="/mnt/c/Users/user/Google Drive/CodeProjects/anchors/src/engine.h" line="19" column="1" bodyfile="/mnt/c/Users/user/Google Drive/CodeProjects/anchors/src/engine.h" bodystart="19" bodyend="116"/>
    <listofallmembers>
      <member refid="classanchors_1_1Engine_1aea1a8d4435b569a94de96745c60d49dd" prot="private" virt="non-virtual"><scope>anchors::Engine</scope><name>d_observedNodes</name></member>
      <member refid="classanchors_1_1Engine_1ad9849da6117a0cb3dd0b39678e105e10" prot="private" virt="non-virtual"><scope>anchors::Engine</scope><name>d_recomputeHeap</name></member>
      <member refid="classanchors_1_1Engine_1afa19e3023ab30a4569204a1f1b23bece" prot="private" virt="non-virtual"><scope>anchors::Engine</scope><name>d_recomputeSet</name></member>
      <member refid="classanchors_1_1Engine_1afb3779b91c6bf36bf6e2718f9d48ee2b" prot="private" virt="non-virtual"><scope>anchors::Engine</scope><name>d_stabilizationNumber</name></member>
      <member refid="classanchors_1_1Engine_1a19d012d2d76c88cb1368be8748df9ed3" prot="public" virt="non-virtual"><scope>anchors::Engine</scope><name>Engine</name></member>
      <member refid="classanchors_1_1Engine_1a9bbb22829c003b574174d9f8a8c0191a" prot="public" virt="non-virtual"><scope>anchors::Engine</scope><name>get</name></member>
      <member refid="classanchors_1_1Engine_1a8b358a80ca9c9e9a44b3e219250ff783" prot="public" virt="non-virtual"><scope>anchors::Engine</scope><name>observe</name></member>
      <member refid="classanchors_1_1Engine_1a7265da1f67909b755ab765f27b1b923c" prot="public" virt="non-virtual"><scope>anchors::Engine</scope><name>observe</name></member>
      <member refid="classanchors_1_1Engine_1a2d19da55d05d01e30ec6733cb1f5d90b" prot="private" virt="non-virtual"><scope>anchors::Engine</scope><name>observeNode</name></member>
      <member refid="classanchors_1_1Engine_1a66fa173d6eb7615402aa0abbfd869a1b" prot="public" virt="non-virtual"><scope>anchors::Engine</scope><name>set</name></member>
      <member refid="classanchors_1_1Engine_1a9250e6e9b037b9c60ba6a5dab9fc8a46" prot="private" virt="non-virtual"><scope>anchors::Engine</scope><name>stabilize</name></member>
      <member refid="classanchors_1_1Engine_1ab027e6babde932c9b11461a12456207f" prot="public" virt="non-virtual"><scope>anchors::Engine</scope><name>unobserve</name></member>
      <member refid="classanchors_1_1Engine_1a421a2e8e0f41c8e6b76b6d14c37dda43" prot="private" virt="non-virtual"><scope>anchors::Engine</scope><name>unobserveNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
